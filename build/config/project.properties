# project.properties file defines overrides for default.properties

# Explanation: This file should be created by each user as and when he or she needs to override particular values.
# Consequently, it should not be placed under version control.

dir.source          = dev-resources/

# Stylesheets
#
# Note: Stylesheets will be concatenated in the order they are listed in the file.stylesheets property (i.e. the last
# file listed will be at the end of the concatenated file), so it probably makes sense to have the main style.css file
# as the first entry
# Example:
# file.stylesheets  = style.css, lightbox.css, plugin.css
#
file.stylesheets  = style.css, main.css


# Web Pages
#
# These are the pages (files) that will be served to users (.html, .php, .asp, etc). Files in this property will
# be minified / optimised and have any stylesheet or javascript references updated to the minified examples
#
# The paths need to be relative
#
# Files can be added in a comma separated form
file.pages        = public/index.html, soy/**/*.soy

# site manifest for offline
# this is the name of the manifest file you declared in the <html> tag
# Uncomment this line to enable appcache generation:
# file.manifest    = manifest.appcache

# Excluded files and dirs
#
# Add any files or directories you add to the project and do not want to be copied to the publish directory as a
# comma separated list
# These files are ignored in addition to the default ones specified in default.properties.
file.exclude      = **/*.swp,  **/*.swo, settings/*

# Bypassed JavaScript files and dirs
#
# Add any files or folders within the mylibs directory that you want to be copied to the publish directory as a
# comma separated list
# These files will not be concatenated or minimized and will simply be copied over as is.
# Note: you cannot declare an empty file.bypass property, it would exclude the entire mylibs folder
# Example:
# file.js.bypass = widgets.js, gadgets.js, gidgets.js
# file.js.bypass =

# Clousre Compiler Options
#
# options are WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS
# scripts.compilation.level =  SIMPLE_OPTIMIZATIONS
# options are QUIET DEFAULT AND VERBOSE
# scripts.compilation.warninglevel = QUIET

#
# Specify an environment to build
#
# By Default, it builds a production environment
# Set to dev if building a development environment
# Set to test if building a test environment
#env               =

#
# Bypass Optimization for these image files or folders
#
# images.bypass
# If set, these images will not be optimized
# Note: you cannot declare an empty images.bypass property, it would exclude the entire img folder from being optimized

# Directory Structure
#
# Override any directory paths specific to this project
#
dir.publish         = resources/
dir.js              = public/js
dir.js.libs         = public/js/libs
dir.js.mylibs       = public/js/mylibs
dir.css             = public/css
dir.images          = public/img

# ClojureScript compiler path must be fully specified since it does not yet have
# a binary release
tool.lein          = lein2

# Override default JSHint Options (see http://jshint.com/ for description of options)
#tool.jshint.opts =

# Override default JSLint Options (see http://www.jslint.com/lint.html for description of options)
#tool.jslint.opts =

# Override default CSSLint Options (see http://csslint.net/about.html#settings for description of options)
#tool.csslint.opts =

# Override default htmlcompressor options 
#tool.htmlcompressor.opts    = --remove-quotes --preserve-multi-spaces --compress-js --compress-css --preserve-php --preserve-ssi

# Add optional htmlcompressor options
tool.htmlcompressor.opts.extra =   

# set the hash length used for versioning css and js files.
# valid values are between 1 and 40.
# shorter values use less bytes at the expense of increasing the probability of a hash collision.
#hash.length = 7

# Optional property used to determine whether to include requirejs' implementation of <script> in the build process
# Uncomment and include the path
#	Example: script.require.path = js/libs/require-jquery.js
# script.require.path = 
